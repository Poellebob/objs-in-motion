[gd_scene load_steps=3 format=3 uid="uid://52advj25csr4"]

[ext_resource type="FontFile" uid="uid://dmdsaedej3dpc" path="res://fonts/CommitMonoNerdFont-Regular.otf" id="1_fyqef"]

[sub_resource type="GDScript" id="GDScript_xb563"]
script/source = "extends CanvasLayer

@onready var velosity0_text: LineEdit = $Control/VBoxContainer/HBoxContainer/LineEdit
@onready var angle0_text: LineEdit = $Control/VBoxContainer/HBoxContainer/LineEdit2
@onready var h_slider: HSlider = $Control/VBoxContainer/HBoxContainer/HSlider
@onready var xin_text: LineEdit = $Control/VBoxContainer/HBoxContainer2/LineEdit
@onready var yin_text: LineEdit = $Control/VBoxContainer/HBoxContainer2/LineEdit2
@onready var input_mode: MenuButton = $Control/VBoxContainer/HBoxContainer2/MenuButton

var velosity0: float
var angle0: float
var x0: float
var y0: float
var xin_old: float
var yin_old: float
var input_type: int

signal time_changed(progress: float)
signal angle0_change(a0: float)
signal velocity0_change(v0: float)
signal x0_change(x0: float)
signal y0_change(y0: float)

var playing: bool = false
var controll_free: bool = true

func  _ready() -> void:
	if(float(velosity0_text.text)):
		velosity0 = float(velosity0_text.text)
	if(float(angle0_text.text)):
		angle0 = deg_to_rad(float(angle0_text.text))
	
	input_mode.get_popup().id_pressed.connect(_on_input_mode_selected)


func _process(_delta: float) -> void:
	if(Input.is_action_just_pressed(\"space\")):
		playing = not playing


func _on_h_slider_value_changed(value: float) -> void:
	time_changed.emit(h_slider.value)


func _on_h_slider_drag_ended(value_changed: bool) -> void:
	controll_free = true


func _on_h_slider_drag_started() -> void:
	controll_free = false


func _on_velocity_edit_focus_exited() -> void:
	if velosity0_text.text.is_valid_float():
		if velosity0 != float(velosity0_text.text):
			_v0_submitted(velosity0_text.text)


func _v0_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		velosity0 = float(new_text)
		velocity0_change.emit(velosity0)


func _on_angle_edit_focus_exited() -> void:
	if angle0_text.text.is_valid_float():
		if angle0 != deg_to_rad(float(angle0_text.text)):
			_a0_submitted(angle0_text.text)


func _a0_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		angle0 = deg_to_rad(float(new_text))
		angle0_change.emit(angle0)


func _xin_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		xin_old = float(new_text)
		x0_change.emit(x0)


func _on_xin_edit_focus_exited() -> void:
	if xin_text.text.is_valid_float():
		if xin_old != float(xin_text.text):
			_xin_submitted(xin_text.text)


func _yin_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		yin_old = float(new_text)
		y0_change.emit(yin_old)


func _on_yin_edit_focus_exited() -> void:
	if yin_text.text.is_valid_float():
		if yin_old != float(yin_text.text):
			_yin_submitted(yin_text.text)


func _on_stop_pressed() -> void:
	playing = false


func _on_play_pressed() -> void:
	playing = true


func set_progress(progress: float):
	h_slider.value = progress


func set_ball_display(x:float,y:float,vx:float,vy:float):
	$Control/VBoxContainer/HBoxContainer2/x.text = str(x)
	$Control/VBoxContainer/HBoxContainer2/y.text = str(y)
	$Control/VBoxContainer/HBoxContainer2/vx.text = str(vx)
	$Control/VBoxContainer/HBoxContainer2/vy.text = str(vy)


func _on_input_mode_selected(id: int):
	input_type = id
	match id:
		0:
			$Control/VBoxContainer/HBoxContainer2/Label.text = \"x0=\"
			$Control/VBoxContainer/HBoxContainer2/Label2.text = \"y0=\"
		1:
			$Control/VBoxContainer/HBoxContainer2/Label.text = \"endx=\"
			$Control/VBoxContainer/HBoxContainer2/Label2.text = \"endy=\"
"

[node name="CanvasLayer" type="CanvasLayer"]
script = SubResource("GDScript_xb563")

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer" type="VBoxContainer" parent="Control"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Control" type="Control" parent="Control/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="Control/VBoxContainer"]
layout_mode = 2

[node name="Play" type="Button" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
focus_mode = 0
theme_override_fonts/font = ExtResource("1_fyqef")
text = ""

[node name="Stop" type="Button" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
theme_override_fonts/font = ExtResource("1_fyqef")
text = "󰝤"

[node name="HSlider" type="HSlider" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
focus_mode = 1
step = 0.01

[node name="Label" type="Label" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "v0="

[node name="LineEdit" type="LineEdit" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "200"

[node name="Label2" type="Label" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "a0="

[node name="LineEdit2" type="LineEdit" parent="Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "25"

[node name="HBoxContainer2" type="HBoxContainer" parent="Control/VBoxContainer"]
layout_mode = 2

[node name="Label3" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "x="

[node name="x" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2

[node name="Label4" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "y="

[node name="y" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2

[node name="Label5" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "vx="

[node name="vx" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2

[node name="Label6" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "vy="

[node name="vy" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2

[node name="Control" type="Control" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3

[node name="MenuButton" type="MenuButton" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "Choose"
flat = false
item_count = 2
popup/item_0/text = "start variables"
popup/item_0/checked = true
popup/item_0/id = 0
popup/item_1/text = "end point"
popup/item_1/id = 1

[node name="Label" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "x0="

[node name="LineEdit" type="LineEdit" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "0"

[node name="Label2" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "y0="

[node name="LineEdit2" type="LineEdit" parent="Control/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "0"

[connection signal="pressed" from="Control/VBoxContainer/HBoxContainer/Play" to="." method="_on_play_pressed"]
[connection signal="pressed" from="Control/VBoxContainer/HBoxContainer/Stop" to="." method="_on_stop_pressed"]
[connection signal="drag_ended" from="Control/VBoxContainer/HBoxContainer/HSlider" to="." method="_on_h_slider_drag_ended"]
[connection signal="drag_started" from="Control/VBoxContainer/HBoxContainer/HSlider" to="." method="_on_h_slider_drag_started"]
[connection signal="value_changed" from="Control/VBoxContainer/HBoxContainer/HSlider" to="." method="_on_h_slider_value_changed"]
[connection signal="focus_exited" from="Control/VBoxContainer/HBoxContainer/LineEdit" to="." method="_on_velocity_edit_focus_exited"]
[connection signal="text_submitted" from="Control/VBoxContainer/HBoxContainer/LineEdit" to="." method="_v0_submitted"]
[connection signal="focus_exited" from="Control/VBoxContainer/HBoxContainer/LineEdit2" to="." method="_on_angle_edit_focus_exited"]
[connection signal="text_submitted" from="Control/VBoxContainer/HBoxContainer/LineEdit2" to="." method="_a0_submitted"]
[connection signal="focus_exited" from="Control/VBoxContainer/HBoxContainer2/LineEdit" to="." method="_on_xin_edit_focus_exited"]
[connection signal="text_submitted" from="Control/VBoxContainer/HBoxContainer2/LineEdit" to="." method="_xin_submitted"]
[connection signal="focus_exited" from="Control/VBoxContainer/HBoxContainer2/LineEdit2" to="." method="_on_yin_edit_focus_exited"]
[connection signal="text_submitted" from="Control/VBoxContainer/HBoxContainer2/LineEdit2" to="." method="_yin_submitted"]
